const ASSETS_CACHE_NAME = "assets-cache-1706";
const DATA_CACHE_NAME = "data-cache-1706";

const cacheWhitelist = [ASSETS_CACHE_NAME, DATA_CACHE_NAME];

let urlsToCache = [
  "/"
];

// The first time the user starts up the PWA, 'install' is triggered.
self.addEventListener("install", function(event) {
  event.waitUntil(
    caches.open(ASSETS_CACHE_NAME).then(function(cache) {
      // Get the assets manifest so we can see what our js file is named
      // This is because webpack hashes it
      fetch("asset-manifest.json")
        .then(response => response.json())
        .then(assets => {
          // Open a cache and cache our files
          // We want to cache the page and the main.js generated by webpack
          // We could also cache any static assets like CSS or images
          urlsToCache.push(assets["main.js"]);
          cache.addAll(urlsToCache);
        });
    })
  );
});

// Delete old caches that are not our current one!
self.addEventListener("activate", event => {
  event.waitUntil(
    caches.keys().then(keyList =>
      Promise.all(
        keyList.map(key => {
          if (!cacheWhitelist.includes(key)) {
            return caches.delete(key);
          }
        })
      )
    )
  );
  return self.clients.claim();
});

// When the webpage goes to fetch files, we intercept that request and serve up the matching files
// if we have them
self.addEventListener("fetch", function(event) {
  event.respondWith(
    caches.match(event.request).then(function(response) {
      return response || fetch(event.request);
    })
  );
});
